f() {
  echo "find . -iname \"*$1*\""
  find . -iname "*$1*"
}

datediff () {
  echo $(( ($(date -u -d $1 +%s) - $(date -u -d $2 +%s)) / 86400))
}

function nextDay() {
  local now=$(date +"%Y-%m-%dT%H:%M:%SZ")
  local tomorrow=$(date -v "+1d" +"%Y-%m-%dT%H:%M:%SZ")
  echo $tomorrow
}

toHex() {
  echo -n $1 | od -A n -t x1
}

hexToString() {
    local hex_string="$1"
    local ascii_string=""
    hex_string=$(echo "$hex_string" | tr -d '[:space:]')
    if [[ ! $hex_string =~ ^[0-9a-fA-F]+$ ]]; then
        echo "Error: Invalid hexadecimal string."
        return 1
    fi
	 # two characters at a time (one bite)
    for (( i = 0; i < ${#hex_string}; i += 2 )); do
        byte="${hex_string:$i:2}"
        ascii_string+=$(printf "\\x$byte")
    done
    echo -e "$ascii_string"
}

ex () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2) tar xjf $1 ;; 
      *.tar.gz) tar xzf $1 ;;
      *.bz2) bunzip2 $1 ;;
      *.rar) unrar x $1 ;;
      *.gz) gunzip $1 ;;
      *.tar) tar xf $1 ;;
      *.tbz2) tar xjf $1 ;;
      *.tgz) tar xzf $1 ;; 
      *.zip) unzip $1 ;;
      *.Z) uncompress $1 ;;
      *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
